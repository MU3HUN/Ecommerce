<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Ecommerce.userinfo.mapper.UserInfoMapper">
    
    <resultMap type="UserInfo" id="UserInfoResult">
        <result property="usersId"    column="users_id"    />
        <result property="roleId" column="role_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="name"    column="name"    />
        <result property="gender"    column="gender"    />
        <result property="phone"    column="phone"    />
        <result property="address"    column="address"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="deptName" column="dept_name"/>
    </resultMap>

    <sql id="selectUserInfoVo">
        select users_id, dept_id, user_id, name, gender, phone, address, create_time, update_time from user_info
    </sql>

    <select id="selectUserInfoList" parameterType="UserInfo" resultMap="UserInfoResult">
        SELECT u.*, d.dept_name
        FROM user_info u
        LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
        WHERE u.is_deleted = 0
        ${params.dataScope}
        <if test="name != null  and name != ''"> AND u.name LIKE CONCAT('%', #{name}, '%')</if>
        <if test="gender != null  and gender != ''"> AND u.gender = #{gender}</if>
    </select>
    
    <select id="selectUserInfoByUserId" parameterType="Long" resultMap="UserInfoResult">
        <include refid="selectUserInfoVo"/>
        <where>
            is_deleted = 0
            AND users_id = #{usersId}
        </where>
    </select>

    <insert id="insertUserInfo" parameterType="UserInfo" useGeneratedKeys="true" keyProperty="usersId">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="gender != null">gender,</if>
            <if test="phone != null">phone,</if>
            <if test="address != null">address,</if>
            <if test="createTime != null">create_time,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="userId != null">user_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="gender != null">#{gender},</if>
            <if test="phone != null">#{phone},</if>
            <if test="address != null">#{address},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="userId != null">#{userId},</if>
         </trim>
    </insert>

    <update id="updateUserInfo" parameterType="UserInfo">
        update user_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="roleId != null">role_id = #{roleId},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="address != null">address = #{address},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="userId != null">user_id = #{userId},</if>
        </trim>
        where users_id = #{usersId}
    </update>

    <delete id="deleteUserInfoByUserId" parameterType="Long">
        delete from user_info where users_id = #{usersId}
    </delete>

    <update id="deleteUserInfoByUserIds">
        UPDATE user_info SET is_deleted = 1
        WHERE users_id IN
        <foreach item="usersId" collection="array" open="(" separator="," close=")">
            #{usersId}
        </foreach>
    </update>
</mapper>